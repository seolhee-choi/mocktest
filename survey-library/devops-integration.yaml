# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

resources:
  repositories:
    - repository: Service # The name used to reference this repository in the checkout step
      type: github
      endpoint: dmitrykurmanov:admin
      name: surveyjs/service

trigger:
  batch: true
  branches:
    include:
      - master
  tags:
    exclude:
      - v*.*.*

pool:
  vmImage: "Ubuntu-16.04"

steps:
  - checkout: self
  - checkout: Service
    persistCredentials: true
    clean: true

  - task: NodeTool@0
    inputs:
      versionSpec: "14.x"
    displayName: "Install Node.js"

  # setup next release version
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: "specific"
      project: "af2804d2-859a-4705-9ef5-cdf46d1d5d4f"
      pipeline: "47"
      buildVersionToDownload: "latest"
      downloadType: "single"
      artifactName: "ReleaseVersionFile"
      downloadPath: "$(System.ArtifactsDirectory)"

  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(System.ArtifactsDirectory)/ReleaseVersionFile/"
      Contents: "version.txt"
      TargetFolder: "$(Build.SourcesDirectory)/"
      OverWrite: true
    displayName: "Copy Build Artifact - SurveyJSVersion File"

  - powershell: |
      $version = Get-Content $(Build.SourcesDirectory)/version.txt
      Write-Host "##vso[task.setvariable variable=SurveyJSVersion;]$version"
    displayName: "setup SurveyJSVersion variable from SurveyJSVersionFile"
  ##########################################################################

  - script: |
      cd $(Build.SourcesDirectory)/survey-library
      npm install
      npm run release -- --release-as $(SurveyJSVersion)
      npm run build_prod
      npm run build_core
      npm run build_knockout_ui
      npm run build_react_ui
      npm run build_vue_ui
    displayName: "npm install and build"

  - script: |
      cd $(Build.SourcesDirectory)/survey-library
      npm run testsingle
    displayName: "run unit tests"

  - script: |
      cd $(Build.SourcesDirectory)/survey-library
      npm run testcafe_ci
    displayName: "run functional tests"

  - script: |
      cd $(Build.SourcesDirectory)/survey-library
      npm run doc_gen
    displayName: "generate docs"

  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/survey-library/docs"
      TargetFolder: "$(Build.SourcesDirectory)/service/surveyjs.io/App_Data/DocsLibrary"
      CleanTargetFolder: true
    displayName: "copy generated docs to the local surveyjs/service repo"

  # read about the problem with git output ($env:GIT_REDIRECT_STDERR = '2>&1') :
  # https://github.com/microsoft/azure-pipelines-yaml/issues/248
  # https://stackoverflow.com/questions/58485585/azure-pipeline-powershell-and-git-on-windows-server-2019-gives-error-in-output
  - powershell: |
      cd $(Build.SourcesDirectory)/service
      $env:GIT_REDIRECT_STDERR = '2>&1'
      git config --global user.email "kurmanov.work@gmail.com"
      git config --global user.name "dmitrykurmanov"
      git checkout master
      git pull origin master
      git fetch --tags --force
      git add surveyjs.io/App_Data/DocsLibrary
      git commit -m "updated survey-library docs"
      git pull origin master
      git push origin master
    displayName: "git surveyjs/service push updated docs"

  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/survey-library/build"
      TargetFolder: "$(Build.ArtifactStagingDirectory)/SurveyJSLibraryBuild/packages"

  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/survey-library/build"
      TargetFolder: "$(Build.ArtifactStagingDirectory)/SurveyJSLibraryBuild/build"

  #trigger next build via the artifact file 'version.txt'
  - task: CopyFiles@2
    inputs:
      contents: "version.txt"
      targetFolder: $(Build.ArtifactStagingDirectory)/SurveyJSLibraryBuild
    displayName: "copy version file to Build.ArtifactStagingDirectory"

  #publishLocation: 'Container' - store the artifact in Azure Pipelines
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)/SurveyJSLibraryBuild/"
      ArtifactName: "SurveyJSLibraryBuild"
      publishLocation: "Container"
